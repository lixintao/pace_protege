<assembly xmlns="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2"
          xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
          xsi:schemaLocation="http://maven.apache.org/plugins/maven-assembly-plugin/assembly/1.1.2 http://maven.apache.org/xsd/assembly-1.1.2.xsd">

    <id>os-x</id>
    <formats>
        <format>dir</format>
        <format>zip</format>
    </formats>
    <baseDirectory>Protege-${project.version}</baseDirectory>

    <fileSets>

        <fileSet>
            <directory>src/main/felix</directory>
            <outputDirectory>.</outputDirectory>
            <includes>
                <include>**/*</include>
            </includes>
        </fileSet>

        <fileSet>
            <directory>src/main/logging</directory>
            <outputDirectory>.</outputDirectory>
            <includes>
                <include>**/*</include>
            </includes>
        </fileSet>

        <fileSet>
            <directory>src/main/env/os-x</directory>
            <outputDirectory>.</outputDirectory>
            <fileMode>0755</fileMode>
            <directoryMode>0755</directoryMode>
        </fileSet>

    </fileSets>

    <dependencySets>

        <dependencySet>
            <outputDirectory>.</outputDirectory>
            <includes>
                <include>edu.stanford.protege:jre.os-x:jar</include>
            </includes>
            <unpack>true</unpack>
            <unpackOptions>
                <excludes>
                    <exclude>META-INF</exclude>
                    <exclude>META-INF/**/*</exclude>
                </excludes>
            </unpackOptions>
            <!--
                This is unsatisfactory as it applies to everything.  However, I'm not sure
                how to do this otherwise. (Note, listing the artifact twice with different
                includes and excludes doesn't help as it gets skipped the second time.
            -->
            <fileMode>0755</fileMode>
            <directoryMode>0755</directoryMode>
            <useStrictFiltering>true</useStrictFiltering>
        </dependencySet>

        <dependencySet>
            <outputDirectory>bin</outputDirectory>
            <includes>
                <include>edu.stanford.protege:ProtegeLauncher:jar</include>
                <include>org.apache.felix:org.apache.felix.main:jar</include>
            </includes>
            <useStrictFiltering>true</useStrictFiltering>
            <outputFileNameMapping>${artifact.artifactId}.${artifact.extension}</outputFileNameMapping>
        </dependencySet>

        <dependencySet>
            <outputDirectory>bundles</outputDirectory>
            <includes>
                <include>edu.stanford.protege:org.protege.common:jar</include>
                <include>edu.stanford.protege:org.protege.editor.core.application:jar</include>
                <include>org.eclipse.equinox:org.eclipse.equinox.common:jar</include>
                <include>org.eclipse.equinox:org.eclipse.equinox.registry:jar</include>
                <include>org.eclipse.equinox:org.eclipse.equinox.supplement:jar</include>
            </includes>
            <useStrictFiltering>true</useStrictFiltering>
            <outputFileNameMapping>${artifact.artifactId}.${artifact.extension}</outputFileNameMapping>
        </dependencySet>

        <dependencySet>
            <outputDirectory>plugins</outputDirectory>
            <includes>
                <include>net.sourceforge.owlapi:owlapi-osgidistribution:jar</include>
                <include>edu.stanford.protege:ca.uvic.cs.chisel.cajun:jar</include>
                <include>edu.stanford.protege:org.coode.dlquery:jar</include>
                <include>edu.stanford.protege:org.coode.owlviz:jar</include>
                <include>edu.stanford.protege:org.protege.editor.owl:jar</include>
                <include>edu.stanford.protege:org.protege.editor.owl.codegeneration:jar</include>
                <include>edu.stanford.protege:org.protege.editor.owl.diff:jar</include>
                <include>edu.stanford.protege:org.protege.editor.owl.rdf:jar</include>
                <include>edu.stanford.protege:org.protege.explanation:jar</include>
                <include>edu.stanford.protege:org.protege.integration.hermit:jar</include>
                <include>edu.stanford.protege:org.protege.ontograf:jar</include>
                <include>edu.stanford.protege:org.protege.owl.diff:jar</include>
                <include>edu.stanford.protege:org.protege.owl.rdf:jar</include>
                <include>com.google.guava:guava:jar</include>
            </includes>
            <useStrictFiltering>true</useStrictFiltering>
            <outputFileNameMapping>${artifact.artifactId}.${artifact.extension}</outputFileNameMapping>
        </dependencySet>
    </dependencySets>
</assembly>
